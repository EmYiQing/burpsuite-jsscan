package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import core.JsScan;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Objects;

public class TestUI {

    public static JPanel mainPanel;
    public static JPanel child;
    public static JButton start;
    public static JProgressBar progress;
    public static JScrollPane scrollPanel;
    public static JTextField inputUrl;
    public static JLabel authorLabel;
    public static JTextArea resultArea;
    public static JTextArea autoResult;
    public static JScrollPane autoPanel;
    public static JCheckBox enableAutoScanCheckBox;
    public static JButton manualClear;
    public static JButton autoClear;
    public static JLabel progressLabel;

//    public JPanel mainPanel;
//    public JPanel child;
//    public JButton start;
//    public JProgressBar progress;
//    public JScrollPane scrollPanel;
//    public JTextField inputUrl;
//    public JLabel authorLabel;
//    public JTextArea resultArea;
//    public JTextArea autoResult;
//    public JScrollPane autoPanel;
//    public JCheckBox enableAutoScanCheckBox;
//    public JButton manualClear;
//    public JButton autoClear;
//    public JLabel progressLabel;


    public static void setAutoText(String text) {
        if (enableAutoScanCheckBox.isSelected()) {
            String old = autoResult.getText();
            String result = old + "\n" + text;
            autoResult.setText(result);
        }
    }

    public static void setManualText(String text) {
        String old = resultArea.getText();
        String result = old + text + "\n";
        resultArea.setText(result);
    }

    public static void finishManualScan() {
        progress.setValue(100);
        start.setText("Start");
        inputUrl.setText("");
    }

    public TestUI() {
        start.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (inputUrl.getText() != null &&
                        !Objects.equals(inputUrl.getText(), "")) {
                    start.setText("Scanning......");
                    JsScan.startScan(inputUrl.getText());
                }
            }
        });

        autoClear.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                autoResult.setText("");
            }
        });

        manualClear.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                resultArea.setText("");
            }
        });

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(7, 3, new Insets(0, 0, 0, 0), -1, -1));
        child = new JPanel();
        child.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(child, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(558, 34), null, 0, false));
        inputUrl = new JTextField();
        inputUrl.setText("");
        child.add(inputUrl, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Please Input JS URL:");
        child.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        start = new JButton();
        start.setText("Start");
        mainPanel.add(start, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Manual Scan Result:");
        mainPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        progress = new JProgressBar();
        progress.setValue(50);
        mainPanel.add(progress, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        scrollPanel = new JScrollPane();
        mainPanel.add(scrollPanel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        resultArea = new JTextArea();
        resultArea.setColumns(50);
        resultArea.setEditable(false);
        resultArea.setRows(20);
        resultArea.setText("");
        scrollPanel.setViewportView(resultArea);
        authorLabel = new JLabel();
        authorLabel.setText("Author:Xu Shao   Team:Xiaodi Security QQ:2023503307");
        mainPanel.add(authorLabel, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        progressLabel = new JLabel();
        progressLabel.setText("10/20");
        mainPanel.add(progressLabel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        autoPanel = new JScrollPane();
        mainPanel.add(autoPanel, new GridConstraints(4, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        autoResult = new JTextArea();
        autoResult.setColumns(50);
        autoResult.setEditable(false);
        autoResult.setRows(10);
        autoResult.setText("");
        autoPanel.setViewportView(autoResult);
        enableAutoScanCheckBox = new JCheckBox();
        enableAutoScanCheckBox.setEnabled(true);
        enableAutoScanCheckBox.setSelected(false);
        enableAutoScanCheckBox.setText("Enable Auto Scan");
        mainPanel.add(enableAutoScanCheckBox, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Auto Scan Result:");
        mainPanel.add(label3, new GridConstraints(4, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        manualClear = new JButton();
        manualClear.setText("Clear");
        mainPanel.add(manualClear, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        autoClear = new JButton();
        autoClear.setText("Clear");
        mainPanel.add(autoClear, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        progress.setValue(0);
        progressLabel.setText("0/0");
        return mainPanel;
    }
}
